// <auto-generated />
using System;
using CUOIKY.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CUOIKY.Migrations
{
    [DbContext(typeof(LTWDbContext))]
    [Migration("20241127040842_transaction")]
    partial class transaction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CUOIKY.Repository.Models.Description", b =>
                {
                    b.Property<int>("DescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DescriptionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DescriptionId"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<bool?>("Disciple")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("ItemID");

                    b.Property<int?>("Planet")
                        .HasColumnType("int");

                    b.Property<bool?>("Portal")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("Server")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DescriptionId")
                        .HasName("PK__DESCRIPT__A58A9FEBD498DBF4");

                    b.HasIndex("ItemId");

                    b.HasIndex("ProductId");

                    b.ToTable("DESCRIPTION", (string)null);
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ImageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DescriptionId")
                        .HasColumnType("int")
                        .HasColumnName("DescriptionID");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ImageId")
                        .HasName("PK__IMAGE__7516F4EC67F063F4");

                    b.HasIndex("DescriptionId");

                    b.ToTable("IMAGE", (string)null);
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("ItemID");

                    b.Property<string>("ItemName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ItemId");

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("money");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("OrderId")
                        .HasName("PK__ORDER__C3905BAFDB686A18");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ORDER", (string)null);
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DescriptionId")
                        .HasColumnType("int")
                        .HasColumnName("DescriptionID");

                    b.Property<string>("Gmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ProductTypeID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool?>("StatusSell")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId")
                        .HasName("PK__PRODUCT__B40CC6ED85A56880");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("PRODUCT", (string)null);
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.ProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductTypeId"));

                    b.Property<string>("ProductTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductTypeId")
                        .HasName("PK__ProductT__A1312F4EA4810B21");

                    b.ToTable("ProductType", (string)null);
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId")
                        .HasName("PK__ROLE__8AFACE3AFD0D7CD7");

                    b.ToTable("ROLE", (string)null);
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Transaction", b =>
                {
                    b.Property<int>("TopUpRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TopUpRequestId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TopUpRequestId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<decimal?>("Balance")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserNameString")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__USER__1788CCAC0D7A0AF2");

                    b.HasIndex("RoleId");

                    b.ToTable("USER", (string)null);
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Description", b =>
                {
                    b.HasOne("CUOIKY.Repository.Models.Item", "Item")
                        .WithMany("Descriptions")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_DESCRIPTION_Item");

                    b.HasOne("CUOIKY.Repository.Models.Product", "Product")
                        .WithMany("Descriptions")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__DESCRIPTI__Produ__4E88ABD4");

                    b.Navigation("Item");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Image", b =>
                {
                    b.HasOne("CUOIKY.Repository.Models.Description", "Description")
                        .WithMany("Images")
                        .HasForeignKey("DescriptionId")
                        .HasConstraintName("FK__IMAGE__Descripti__5812160E");

                    b.Navigation("Description");
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Order", b =>
                {
                    b.HasOne("CUOIKY.Repository.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ORDER_PRODUCT");

                    b.HasOne("CUOIKY.Repository.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__ORDER__UserID__5165187F");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Product", b =>
                {
                    b.HasOne("CUOIKY.Repository.Models.Description", "Description")
                        .WithMany("Products")
                        .HasForeignKey("DescriptionId")
                        .HasConstraintName("FK__PRODUCT__Descrip__4D94879B");

                    b.HasOne("CUOIKY.Repository.Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .HasConstraintName("FK__PRODUCT__Product__4CA06362");

                    b.Navigation("Description");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Transaction", b =>
                {
                    b.HasOne("CUOIKY.Repository.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.User", b =>
                {
                    b.HasOne("CUOIKY.Repository.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__USER__RoleID__47DBAE45");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Description", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Item", b =>
                {
                    b.Navigation("Descriptions");
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Product", b =>
                {
                    b.Navigation("Descriptions");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CUOIKY.Repository.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
